<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\Booking>
 */
class BookingFactory extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        $bataan_cities = [
            'Balanga City', 'Bagac', 'Dinalupihan', 'Hermosa', 'Limay',
            'Mariveles', 'Morong', 'Orani', 'Orion', 'Pilar', 'Samal', 'Abucay',
        ];

        $barangays = [
            // Balanga City barangays
            'Bagong Silang', 'Bagumbayan', 'Cabog-Cabog', 'Central', 'Cupang North',
            'Cupang Proper', 'Cupang West', 'Dangcol', 'Doña Francisca', 'Ibayo',
            'Malainin', 'Poblacion', 'San Jose', 'Sibacan', 'Talisay', 'Tortugas',
            // Common barangay names in other towns
            'Bayan', 'Centro', 'Kaakbayan', 'Lucanin', 'Pag-asa', 'San Antonio',
            'San Isidro', 'San Juan', 'San Miguel', 'San Nicolas', 'San Pedro',
            'San Rafael', 'Santa Cruz', 'Santa Rita', 'Santo Niño', 'Villa Angeles',
        ];

        $streets = [
            'Don Manuel Banzon Ave', 'Capitol Drive', 'Jose P. Laurel Highway',
            'MacArthur Highway', 'Roman Highway', 'Teotimo Street', 'Garcia Street',
            'Roxas Street', 'Rizal Street', 'Quezon Avenue', 'Bonifacio Street',
            'Luna Street', 'Mabini Street', 'Del Pilar Street', 'Aguinaldo Avenue',
            'National Road', 'Provincial Road', 'Barangay Road',
        ];

        $landmarks = [
            'Near Bataan Peninsula State University', 'Near SM City Bataan',
            'Near Capitol Compound', 'Near Public Market', 'Near Plaza',
            'Near Church', 'Near Elementary School', 'Near Health Center',
            'Near Basketball Court', 'Near Barangay Hall', 'Near Highway',
            'Near Bus Terminal', 'Near Cemetery', 'Near Hospital',
        ];

        $acBrands = [
            'Samsung', 'LG', 'Panasonic', 'Carrier', 'Daikin', 'Mitsubishi',
            'Sharp', 'Kolin', 'Condura', 'Fujidenzo', 'TCL', 'Haier',
        ];

        $useCustomAddress = fake()->boolean(60); // 60% chance of using custom address
        $city = fake()->randomElement($bataan_cities);

        return [
            'customer_id' => \App\Models\User::factory()->customer(),
            'service_id' => fake()->numberBetween(1, 7), // Assuming 7 services exist
            'aircon_type_id' => fake()->numberBetween(1, 4), // Assuming 4 aircon types exist
            'number_of_units' => fake()->numberBetween(1, 5),
            'ac_brand' => fake()->randomElement($acBrands),
            'technician_id' => \App\Models\User::factory()->technician(),
            'scheduled_date' => fake()->dateTimeBetween('+1 day', '+30 days'),
            'estimated_days' => fake()->numberBetween(1, 3),
            'status' => fake()->randomElement(['pending', 'confirmed', 'in_progress', 'completed']),
            'payment_status' => fake()->randomElement(['pending', 'paid']),
            'use_custom_address' => $useCustomAddress,
            'customer_address' => null, // Will be generated by model
            'province' => $useCustomAddress ? 'Bataan' : null,
            'city_municipality' => $useCustomAddress ? $city : null,
            'barangay' => $useCustomAddress ? fake()->randomElement($barangays) : null,
            'house_no_street' => $useCustomAddress ? fake()->buildingNumber().' '.fake()->randomElement($streets) : null,
            'customer_mobile' => fake()->mobileNumber(),
            'nearest_landmark' => fake()->randomElement($landmarks),
            'special_instructions' => fake()->optional(0.3)->sentence(),
            'created_by' => 1, // Admin user
        ];
    }

    /**
     * State for customer bookings (uses customer's address)
     */
    public function customerAddress(): static
    {
        return $this->state(fn (array $attributes) => [
            'use_custom_address' => false,
            'province' => null,
            'city_municipality' => null,
            'barangay' => null,
            'house_no_street' => null,
        ]);
    }

    /**
     * State for custom address bookings
     */
    public function customAddress(): static
    {
        return $this->state(fn (array $attributes) => [
            'use_custom_address' => true,
        ]);
    }
}
